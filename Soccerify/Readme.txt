The iOS app, Soccerify, features different soccer leagues, tournaments, events. It allows soccer audiences to check out each match in terms of its result, match date and time, location and especially the preliminary analysis breakdown for different types of matches (90-regular, extra-time needed and penalty needed matches)

This current version have focused only Euro 2016 - the latest worldwide soccer event, and so far, data in the app is only able to scale to the knock-out stage, including rounds of 16, quarter, semi-final and the only final.

My ideal plan and current accomplishment for the app:
_ I planned to have 4 view controllers, the first on-screen one (home view controller) is the table view, which is to present the match's data in terms of its 90-minute regular result, match date and time, location (stadium and city). The home view has its left view controller child with its functionality to filter out the match based on each round of the knock-out stage. There is a tab view controller, in my design choice, acting as a master view which should transition to 2 view controllers- the final result break down one, and the stadium lookup one. The final result break down view controller is supposed to carry out a set of these sub tasks:
+ Match analysis breakdown: I originally thought and designed it under a form of table view controller, which turned out to be not wise enough for the user interface design and didn't apply well to its match analysis model. Then, I removed the view of the table view controller, and along with presenting this match analysis data in the view, I also embedded the web view, which is now colored 'blue' in the background -- the incomplete part of my design at the moment. I planned to have it present the web view related to the corresponding round of knock-out stage (the web written in my own HTML script -- this piece of work turned out not to be unfulfilled with being parsed into the corresponding data model). The whole point here is that I haven't correctly and completely been able to design the data model for this (the nightmarish task was just how to construct a model object which passes the 'matchday' property, but I probably find it out if time permits). A bit more for the web view: it presents the corresponding flag and embedded 3rd-party web URLs for each round)
+ Stadium map: I originally thought this is the view controller which could the navigation of the stadium name embedded in the green button in the home view controller. I only accomplished the part of having a navigation map display with 3 settings: standard , satellite, hybrid. The lookup for the human-readable address of each stadium couldn't be completed unless I finish the geocoding process and have the segue transitioning from the stadium button in the home view controller to this view controller.